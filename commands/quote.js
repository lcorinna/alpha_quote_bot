const { getUserAvatar } = require('../helpers/getAvatar');
const { translitPreserveEmoji } = require('../helpers/translit');
const { generateImage } = require('../render/generateImage');
const { incrementStats } = require('../helpers/stats');

module.exports = async (ctx) => {
  const reply = ctx.message.reply_to_message;

  if (!reply) {
    return ctx.reply(
      '–Ø –Ω–µ –≤–∏–∂—É —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –æ—Ç–≤–µ—Ç–∏–ª. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –±–æ—Ç –∏–ª–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π /quote –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.'
    );
  }

  if (!reply.text || !reply.from || reply.from.is_bot) {
    return ctx.reply('–ú–æ–∂–Ω–æ —Ü–∏—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ª—é–¥–µ–π üë§');
  }

  const commandText = ctx.message.text.split(' ').slice(1).join(' ').trim();
  let quoteText = commandText || reply.text || '';
  quoteText = translitPreserveEmoji(quoteText.trim());

  const isTrimmed = quoteText.length > 100;
  if (isTrimmed) {
    quoteText = quoteText.substring(0, 77).trim();
  }

  let username = reply.from.first_name || 'User';
  username = translitPreserveEmoji(username.replace(/[—å–¨—ä–™\u0000-\u001F\u007F-\u009F]/g, ''));

  const avatarPath = await getUserAvatar(ctx, reply.from.id, reply.from.first_name?.[0] || 'U');
  const imagePath = await generateImage(quoteText, username, avatarPath, isTrimmed);

  await ctx.replyWithPhoto({ source: imagePath });

  // –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π
  try {
    await ctx.deleteMessage();
  } catch (e) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π:', e.message);
  }

  incrementStats(ctx.chat.id);
};
