const { getUserAvatar } = require('../helpers/getAvatar');
const { translitPreserveEmoji } = require('../helpers/translit');
const { filterSupportedChars } = require('../helpers/filterSupportedChars');
const { generateImage } = require('../render/generateImage');
const { incrementStats } = require('../helpers/stats');

module.exports = async (ctx) => {
  // üîí –¢–æ–ª—å–∫–æ –≤ —á–∞—Ç–∞—Ö
  if (ctx.chat.type === 'private') {
    return ctx.reply(
      'üîí –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ ‚Äî –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—Ç—å –Ω–∞ —á—å—ë-—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞–ø–∏—à–∏ /quote, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Ü–∏—Ç–∞—Ç—É.'
    );
  }

  const reply = ctx.message.reply_to_message;

  if (!reply || !reply.text || !reply.from || reply.from.is_bot) {
    return ctx.reply('üëÜ –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /quote –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
  }

  const commandText = ctx.message.text.split(' ').slice(1).join(' ').trim();
  let quoteText = commandText || reply.text || '';
  quoteText = translitPreserveEmoji(quoteText.trim());
  quoteText = filterSupportedChars(quoteText);

  const isTrimmed = quoteText.length > 100;
  if (isTrimmed) {
    quoteText = quoteText.substring(0, 77).trim();
  }

  let username = reply.from.first_name || 'User';
  username = translitPreserveEmoji(
    username.replace(/[—å–¨—ä–™\u0000-\u001F\u007F-\u009F]/g, '')
  );

  const avatarPath = await getUserAvatar(ctx, reply.from.id, username[0] || 'U');
  const imagePath = await generateImage(quoteText, username, avatarPath, isTrimmed);

  await ctx.replyWithPhoto({ source: imagePath });

  try {
    await ctx.deleteMessage();
  } catch (e) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–º–∞–Ω–¥–æ–π:', e.message);
  }

  incrementStats(ctx);
};
